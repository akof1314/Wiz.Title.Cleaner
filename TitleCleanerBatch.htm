<html>
<head>
    <title>Title Cleaner Batch</title>
	<meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <link rel="stylesheet" href="zTree/css/demo.css" type="text/css">
	<link rel="stylesheet" href="zTree/css/zTreeStyle/zTreeStyle.css" type="text/css">
	<script type="text/javascript" src="zTree/js/jquery-1.4.4.min.js"></script>
	<script type="text/javascript" src="zTree/js/jquery.ztree.core-3.5.min.js"></script>
	<SCRIPT type="text/javascript">
		<!--
		var setting = {
		};

		var zNodes =[
		];

		var zTreeObj = null;
		var objApp = window.external;
		var objCommon = null;
		var objDatabase = null;
		var objWindow = null;
		var TitleCleaner_pluginPath = "";

		$(document).ready(function(){
			TitleCleaner_pluginPath = objApp.GetPluginPathByScriptFileName("TitleCleaner.js");
			objCommon = objApp.CreateWizObject("WizKMControls.WizCommonUI");
			objDatabase = objApp.Database;
			objWindow = objApp.Window;
		});

		function TitleCleaner_GetHeader(src)
		{
		    return objCommon.LoadTextFromFile(src);
		}

		function TitleCleaner_ReadText()
		{
		    var arr = TitleCleaner_GetHeader(TitleCleaner_pluginPath + "BlackList.txt").split("\n");

		    for (var i = 0; i < arr.length; i++)
		    {
		        var objDoc = objWindow.CurrentDocument;
		        if (objDoc == null)
		        {
		            return;
		        }
		        else
		        {
		            var arrBL = TitleCleaner_splitBlackListItem(arr[i]);

		            if (arrBL.length == 1)
		            {
		                var reg = new RegExp(arrBL[0], "gmi");
		                objDoc.Title = objDoc.Title.replace(reg, "");
		            }
		            else
		            {
		                var reg = new RegExp(arrBL[0], "gmi");
		                objDoc.Title = objDoc.Title.replace(reg, arrBL[1]);
		            }
		        }
		    }
		}

		function TitleCleaner_splitBlackListItem(BLI)
		{
		    var arrBLSP = new Array();
		    arrBLSP = BLI.split('^^');
		    return arrBLSP;
		}

		function previewTitleCleaner () {
			zNodes = [];
			addChildDocs(objDatabase, zNodes);

			zTreeObj = $.fn.zTree.init($("#treeDemo"), setting, zNodes);
		}

		function doTitleCleaner () {
			console.log(TitleCleaner_pluginPath);
		}

		function addChildDocs(parentFolder, parentNode) {
			var childrenFolders = parentFolder.Folders;
			var childrenDocs = parentFolder.Documents;
			if (childrenDocs){
				for (var i = 0; i < childrenDocs.Count; i++) {
					parentNode.push({name:childrenDocs.Item(i).Title,
					 icon:getIconFileRealPath(childrenDocs.Item(i).GetIconFileName())});
				}
			}
			if (childrenFolders){
				for (var i = 0; i < childrenFolders.Count; i++) {
					var childrenFolder = childrenFolders.Item(i);

					var childrenNode = [];
					parentNode.push({name:childrenFolder.GetDisplayName(0),
					  icon:getIconFileRealPath(childrenFolder.GetIconFileName()),
					  open:true,
					  children:childrenNode});
					addChildDocs(childrenFolder, childrenNode);
				}
			}
		}

		function getIconFileRealPath (fileName) {
			return fileName.replace(/\\/g, "/").replace(/ /g, "%20");
		}

		//-->
	</SCRIPT>
    </htad>
    <body>
	<table style="width:100%;height:100%;table-layout:fixed;padding: 10px;">
        <tr>
			<td colspan="2" >
				规则文件: <input type="text" readonly="true" name="rulename" style="width:70%;"/>
			</td>
            <td align="right">
				<input id="buttonOK" type="button" value="预览" onclick="previewTitleCleaner();" style="width: 70px; padding-top:3px;" />
				<input id="buttonCancel" type="button" value="清理" onclick="doTitleCleaner();" style="width: 70px; padding-top:3px;" />
			</td>
        </tr>
		<tr>
            <td colspan="3" style="width:100%;height:100%;">
				<ul id="treeDemo" class="ztree"></ul>
            </td>
        </tr>
    </table>
    </body>
</html>
